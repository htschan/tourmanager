name: Docker Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}/backend
  FRONTEND_IMAGE_NAME: ${{ github.repository }}/frontend

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}

      # Build and push Backend image
      - name: Build Backend Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:latest
            ${{ secrets.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push Frontend image
      - name: Build Frontend Image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:latest
            ${{ secrets.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Test the stack
      - name: Test Stack
        run: |
          docker compose up -d
          # Wait for services to be healthy
          timeout 30 bash -c 'until curl -s http://localhost:8000/ > /dev/null; do sleep 1; done'
          timeout 30 bash -c 'until curl -s http://localhost:3001/ > /dev/null; do sleep 1; done'
          # Run any additional tests here
          docker compose down
