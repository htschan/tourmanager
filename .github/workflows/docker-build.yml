name: Docker Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Set up metadata variables
      - name: Set up image names
        id: meta
        run: |
          # Ensure registry URL doesn't have trailing slash
          REGISTRY_URL=$(echo "$REGISTRY" | sed 's#/$##')
          echo "backend_image=$REGISTRY_URL/$BACKEND_IMAGE" >> $GITHUB_OUTPUT
          echo "frontend_image=$REGISTRY_URL/$FRONTEND_IMAGE" >> $GITHUB_OUTPUT
          # Debug output
          echo "Debug: Generated backend image name: $REGISTRY_URL/$BACKEND_IMAGE"
          echo "Debug: Generated frontend image name: $REGISTRY_URL/$FRONTEND_IMAGE"
        env:
          REGISTRY: ${{ secrets.REGISTRY }}
          BACKEND_IMAGE: ${{ vars.BACKEND_IMAGE_NAME }}
          FRONTEND_IMAGE: ${{ vars.FRONTEND_IMAGE_NAME }}

      # Extract metadata for versioning
      - name: Extract metadata for Backend Image
        id: metabackend
        uses: docker/metadata-action@v4
        with:
          images: ${{ format('{0}', steps.meta.outputs.backend_image) }}
          flavor: |
            latest=true
          tags: |
            type=sha,format=short

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metabackend.outputs.tags }}
          labels: ${{ steps.metabackend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata for Frontend Image
        id: metafrontend
        uses: docker/metadata-action@v4
        with:
          images: ${{ format('{0}', steps.meta.outputs.frontend_image) }}
          flavor: |
            latest=true
          tags: |
            type=sha,format=short

      # Build and push Frontend image
      - name: Build Frontend Image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metafrontend.outputs.tags }}
          labels: ${{ steps.metafrontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Test the stack
      - name: Test Stack
        run: |
          # Update image names in docker-compose.yml
          sed -i "s|build: ./backend|image: ${{ steps.meta.outputs.backend_image }}|" docker-compose.yml
          sed -i "s|build: ./frontend|image: ${{ steps.meta.outputs.frontend_image }}|" docker-compose.yml
          
          docker compose up -d
          # Wait for services to be healthy
          timeout 30 bash -c 'until curl -s http://localhost:8000/ > /dev/null; do sleep 1; done'
          timeout 30 bash -c 'until curl -s http://localhost:3001/ > /dev/null; do sleep 1; done'
          # Run any additional tests here
          docker compose down
